<?php
/**
 * Backendo: Legacy PHP CRUD Generator
 * Export Generator (Simple Version)
 */

// Enable error reporting
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Create a log file for debugging
function log_debug($message) {
    $log_file = __DIR__ . '/../debug.log';
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents($log_file, "[$timestamp] $message\n", FILE_APPEND);
}

log_debug('Simple Export script started');

// Start session if not already started
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

log_debug('Session status: ' . session_status());

// Check if session data exists
if (!isset($_SESSION['project_name']) || !isset($_SESSION['tables']) || empty($_SESSION['tables'])) {
    log_debug('Session data missing, redirecting to index.php');
    header('Location: ../index.php');
    exit;
}

log_debug('Session data found, proceeding with export');
log_debug('Project name: ' . $_SESSION['project_name']);
log_debug('Tables count: ' . count($_SESSION['tables']));

// Create temporary directory for project files
$temp_dir = __DIR__ . '/../temp/' . time();
if (!file_exists($temp_dir)) {
    mkdir($temp_dir, 0777, true);
}

// Create project directory structure
mkdir($temp_dir . '/config', 0777, true);
mkdir($temp_dir . '/models', 0777, true);
mkdir($temp_dir . '/controllers', 0777, true);
mkdir($temp_dir . '/views', 0777, true);
mkdir($temp_dir . '/views/layouts', 0777, true);
mkdir($temp_dir . '/assets/css', 0777, true);
mkdir($temp_dir . '/assets/js', 0777, true);
mkdir($temp_dir . '/assets/img', 0777, true);
mkdir($temp_dir . '/includes', 0777, true);

// Include required files
require_once __DIR__ . '/../includes/config.php';
require_once __DIR__ . '/../includes/functions.php';

// Create a simple README.md file
$readme_content = "# {$_SESSION['project_name']}\n\n";
$readme_content .= "Generated by Backendo: Legacy PHP CRUD Generator\n\n";
$readme_content .= "## Setup Instructions\n\n";
$readme_content .= "1. Create a new database in MySQL\n";
$readme_content .= "2. Import the included SQL file into your database\n";
$readme_content .= "3. Update the database connection settings in `config/db.php`\n";
$readme_content .= "4. Upload the files to your web server\n";
$readme_content .= "5. Navigate to the project URL in your browser\n";

file_put_contents($temp_dir . '/README.md', $readme_content);

// Create a simple index.php file
$index_content = "<?php\n";
$index_content .= "// Project: {$_SESSION['project_name']}\n";
$index_content .= "// Generated by Backendo\n\n";
$index_content .= "// Start session\nsession_start();\n\n";
$index_content .= "// Include database connection\nrequire_once 'config/db.php';\n";
$index_content .= "// Include helper functions\nrequire_once 'includes/functions.php';\n\n";
$index_content .= "// Determine the requested page\n\$page = isset(\$_GET['page']) ? sanitize_input(\$_GET['page']) : 'home';\n\n";
$index_content .= "// Include the appropriate controller\nswitch (\$page) {\n";
$index_content .= "    case 'home':\n";
$index_content .= "        require_once 'controllers/HomeController.php';\n";
$index_content .= "        \$controller = new HomeController();\n";
$index_content .= "        \$controller->index();\n";
$index_content .= "        break;\n";
$index_content .= "    default:\n";
$index_content .= "        // Page not found\n";
$index_content .= "        header('HTTP/1.0 404 Not Found');\n";
$index_content .= "        echo '<h1>404 - Page Not Found</h1>';\n";
$index_content .= "        break;\n";
$index_content .= "}\n";

file_put_contents($temp_dir . '/index.php', $index_content);

// Create a simple database configuration file
$db_config_content = "<?php\n";
$db_config_content .= "// Database configuration\n";
$db_config_content .= "define('DB_HOST', 'localhost');\n";
$db_config_content .= "define('DB_USER', 'root');\n";
$db_config_content .= "define('DB_PASS', '');\n";
$db_config_content .= "define('DB_NAME', '{$_SESSION['project_name']}');\n\n";
$db_config_content .= "/**\n * Connect to the database\n * \n * @return PDO The database connection\n */\n";
$db_config_content .= "function db_connect() {\n";
$db_config_content .= "    try {\n";
$db_config_content .= "        \$dsn = 'mysql:host=' . DB_HOST . ';dbname=' . DB_NAME . ';charset=utf8mb4';\n";
$db_config_content .= "        \$options = [\n";
$db_config_content .= "            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n";
$db_config_content .= "            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,\n";
$db_config_content .= "            PDO::ATTR_EMULATE_PREPARES => false,\n";
$db_config_content .= "        ];\n";
$db_config_content .= "        return new PDO(\$dsn, DB_USER, DB_PASS, \$options);\n";
$db_config_content .= "    } catch (PDOException \$e) {\n";
$db_config_content .= "        // Log error and display friendly message\n";
$db_config_content .= "        error_log(\$e->getMessage());\n";
$db_config_content .= "        die('Database connection failed. Please check your configuration.');\n";
$db_config_content .= "    }\n";
$db_config_content .= "}\n";

file_put_contents($temp_dir . '/config/db.php', $db_config_content);

// Create a simple functions.php file
$functions_content = "<?php\n";
$functions_content .= "/**\n * Helper Functions\n */\n\n";
$functions_content .= "/**\n * Sanitize user input to prevent XSS attacks\n * \n * @param string \$input The input to sanitize\n * @return string The sanitized input\n */\n";
$functions_content .= "function sanitize_input(\$input) {\n";
$functions_content .= "    \$input = trim(\$input);\n";
$functions_content .= "    \$input = stripslashes(\$input);\n";
$functions_content .= "    \$input = htmlspecialchars(\$input, ENT_QUOTES, 'UTF-8');\n";
$functions_content .= "    return \$input;\n";
$functions_content .= "}\n";

file_put_contents($temp_dir . '/includes/functions.php', $functions_content);

// Create a simple HomeController.php file
$home_controller_content = "<?php\n";
$home_controller_content .= "/**\n * Home Controller\n */\n\n";
$home_controller_content .= "class HomeController {\n";
$home_controller_content .= "    /**\n     * Display the home page\n     */\n";
$home_controller_content .= "    public function index() {\n";
$home_controller_content .= "        // Load the view\n";
$home_controller_content .= "        require_once 'views/layouts/header.php';\n";
$home_controller_content .= "        require_once 'views/home/index.php';\n";
$home_controller_content .= "        require_once 'views/layouts/footer.php';\n";
$home_controller_content .= "    }\n";
$home_controller_content .= "}\n";

file_put_contents($temp_dir . '/controllers/HomeController.php', $home_controller_content);

// Create a simple header.php file
$header_content = "<!DOCTYPE html>\n";
$header_content .= "<html lang=\"en\">\n";
$header_content .= "<head>\n";
$header_content .= "    <meta charset=\"UTF-8\">\n";
$header_content .= "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
$header_content .= "    <title>{$_SESSION['project_name']}</title>\n";
$header_content .= "    <link rel=\"stylesheet\" href=\"assets/css/style.css\">\n";
$header_content .= "</head>\n";
$header_content .= "<body>\n";
$header_content .= "    <header>\n";
$header_content .= "        <nav>\n";
$header_content .= "            <div class=\"container\">\n";
$header_content .= "                <h1>{$_SESSION['project_name']}</h1>\n";
$header_content .= "                <ul>\n";
$header_content .= "                    <li><a href=\"index.php\">Home</a></li>\n";
$header_content .= "                </ul>\n";
$header_content .= "            </div>\n";
$header_content .= "        </nav>\n";
$header_content .= "    </header>\n";
$header_content .= "    <main class=\"container\">\n";

file_put_contents($temp_dir . '/views/layouts/header.php', $header_content);

// Create a simple footer.php file
$footer_content = "    </main>\n";
$footer_content .= "    <footer>\n";
$footer_content .= "        <div class=\"container\">\n";
$footer_content .= "            <p>&copy; " . date('Y') . " {$_SESSION['project_name']}. Generated by Backendo.</p>\n";
$footer_content .= "        </div>\n";
$footer_content .= "    </footer>\n";
$footer_content .= "    <script src=\"assets/js/main.js\"></script>\n";
$footer_content .= "</body>\n";
$footer_content .= "</html>\n";

file_put_contents($temp_dir . '/views/layouts/footer.php', $footer_content);

// Create a simple home/index.php file
$home_index_content = "<div class=\"welcome\">\n";
$home_index_content .= "    <h2>Welcome to {$_SESSION['project_name']}</h2>\n";
$home_index_content .= "    <p>This is a simple PHP application generated by Backendo.</p>\n";
$home_index_content .= "</div>\n";

file_put_contents($temp_dir . '/views/home/index.php', $home_index_content);

// Create a simple style.css file
$style_content = "/* Main Styles */\n";
$style_content .= "body {\n";
$style_content .= "    font-family: Arial, sans-serif;\n";
$style_content .= "    line-height: 1.6;\n";
$style_content .= "    margin: 0;\n";
$style_content .= "    padding: 0;\n";
$style_content .= "    color: #333;\n";
$style_content .= "}\n\n";
$style_content .= ".container {\n";
$style_content .= "    width: 80%;\n";
$style_content .= "    margin: 0 auto;\n";
$style_content .= "    padding: 0 15px;\n";
$style_content .= "}\n\n";
$style_content .= "header {\n";
$style_content .= "    background-color: #333;\n";
$style_content .= "    color: #fff;\n";
$style_content .= "    padding: 1rem 0;\n";
$style_content .= "}\n\n";
$style_content .= "header h1 {\n";
$style_content .= "    margin: 0;\n";
$style_content .= "}\n\n";
$style_content .= "nav ul {\n";
$style_content .= "    list-style: none;\n";
$style_content .= "    padding: 0;\n";
$style_content .= "}\n\n";
$style_content .= "nav ul li {\n";
$style_content .= "    display: inline;\n";
$style_content .= "    margin-right: 10px;\n";
$style_content .= "}\n\n";
$style_content .= "nav a {\n";
$style_content .= "    color: #fff;\n";
$style_content .= "    text-decoration: none;\n";
$style_content .= "}\n\n";
$style_content .= "main {\n";
$style_content .= "    padding: 2rem 0;\n";
$style_content .= "}\n\n";
$style_content .= "footer {\n";
$style_content .= "    background-color: #333;\n";
$style_content .= "    color: #fff;\n";
$style_content .= "    text-align: center;\n";
$style_content .= "    padding: 1rem 0;\n";
$style_content .= "    position: fixed;\n";
$style_content .= "    bottom: 0;\n";
$style_content .= "    width: 100%;\n";
$style_content .= "}\n\n";
$style_content .= ".welcome {\n";
$style_content .= "    text-align: center;\n";
$style_content .= "    margin-top: 2rem;\n";
$style_content .= "}\n";

file_put_contents($temp_dir . '/assets/css/style.css', $style_content);

// Create a simple main.js file
$js_content = "// Main JavaScript file\n";
$js_content .= "document.addEventListener('DOMContentLoaded', function() {\n";
$js_content .= "    console.log('Application loaded');\n";
$js_content .= "});\n";

file_put_contents($temp_dir . '/assets/js/main.js', $js_content);

// Create a simple SQL file with database schema
$sql_content = "-- Database: `{$_SESSION['project_name']}`\n\n";
$sql_content .= "-- Create database if it doesn't exist\n";
$sql_content .= "CREATE DATABASE IF NOT EXISTS `{$_SESSION['project_name']}` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\n\n";
$sql_content .= "USE `{$_SESSION['project_name']}`;\n\n";

// Add table creation SQL
foreach ($_SESSION['tables'] as $table) {
    $sql_content .= "-- Table structure for table `{$table['name']}`\n";
    $sql_content .= "CREATE TABLE IF NOT EXISTS `{$table['name']}` (\n";
    $sql_content .= "  `id` int(11) NOT NULL AUTO_INCREMENT,\n";
    
    foreach ($table['fields'] as $field) {
        $type = $field['type'];
        $length = isset($field['length']) && !empty($field['length']) ? "({$field['length']})" : '';
        $nullable = isset($field['nullable']) && $field['nullable'] ? 'NULL' : 'NOT NULL';
        $default = isset($field['default']) && !empty($field['default']) ? "DEFAULT '{$field['default']}'" : '';
        
        $sql_content .= "  `{$field['name']}` {$type}{$length} {$nullable} {$default},\n";
    }
    
    $sql_content .= "  PRIMARY KEY (`id`)\n";
    $sql_content .= ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n";
}

file_put_contents($temp_dir . '/database.sql', $sql_content);

// Create a ZIP file using PowerShell
$project_name = preg_replace('/[^a-zA-Z0-9_-]/', '_', $_SESSION['project_name']);
$zip_file = __DIR__ . "/../output/{$project_name}.zip";

// Make sure output directory exists
if (!file_exists(__DIR__ . '/../output')) {
    log_debug('Creating output directory');
    $result = mkdir(__DIR__ . '/../output', 0777, true);
    log_debug('Output directory creation result: ' . ($result ? 'success' : 'failed'));
}

// Use PowerShell to create a ZIP file
$temp_dir_escaped = str_replace('\\', '\\\\', $temp_dir);
$zip_file_escaped = str_replace('\\', '\\\\', $zip_file);

$powershell_command = "powershell -Command \"Compress-Archive -Path '{$temp_dir_escaped}\\*' -DestinationPath '{$zip_file_escaped}' -Force\"";

log_debug('Executing PowerShell command: ' . $powershell_command);
exec($powershell_command, $output, $return_var);

log_debug('PowerShell command output: ' . print_r($output, true));
log_debug('PowerShell command return code: ' . $return_var);

// Check if ZIP file was created successfully
if (file_exists($zip_file)) {
    log_debug('ZIP file created successfully: ' . $zip_file);
    
    // Clean up temporary directory
    function deleteDir($dir) {
        if (!file_exists($dir)) {
            return true;
        }
        
        if (!is_dir($dir)) {
            return unlink($dir);
        }
        
        foreach (scandir($dir) as $item) {
            if ($item == '.' || $item == '..') {
                continue;
            }
            
            if (!deleteDir($dir . DIRECTORY_SEPARATOR . $item)) {
                return false;
            }
        }
        
        return rmdir($dir);
    }
    
    deleteDir($temp_dir);
    
    // Redirect to download page
    header('Location: ../index.php?page=download&file=' . basename($zip_file));
    exit;
} else {
    log_debug('Failed to create ZIP file: ' . $zip_file);
    echo "<h1>Error</h1>";
    echo "<p>Failed to create ZIP file. Please check the server logs for more information.</p>";
    echo "<p>Temporary files are available at: {$temp_dir}</p>";
    exit;
}