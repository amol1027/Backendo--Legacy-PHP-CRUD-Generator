<?php
/**
 * Backendo: Legacy PHP CRUD Generator
 * Controller Generator
 */

// Include required files
require_once '../includes/config.php';
require_once '../includes/functions.php';

/**
 * Generate a controller class for a table
 * 
 * @param array $table The table definition
 * @return string The PHP controller class code
 */
function generate_controller($table) {
    $table_name = sanitize_input($table['name']);
    $singular = to_singular($table_name);
    $class_name = to_title_case($singular);
    $controller_name = to_title_case($table_name) . 'Controller';
    
    $controller_code = "<?php\n";
    $controller_code .= "/**\n";
    $controller_code .= " * {$controller_name}\n";
    $controller_code .= " * Generated by Backendo: Legacy PHP CRUD Generator\n";
    $controller_code .= " */\n\n";
    
    // Include model
    $controller_code .= "require_once 'models/{$class_name}.php';\n\n";
    
    // Class definition
    $controller_code .= "class {$controller_name} {\n";
    
    // Index method
    $controller_code .= "    /**\n";
    $controller_code .= "     * Display a listing of the resource\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function index() {\n";
    
    // Add pagination if enabled
    if (isset($_SESSION['features']['pagination']) && $_SESSION['features']['pagination']) {
        $controller_code .= "        // Handle pagination\n";
        $controller_code .= "        \$page = isset(\$_GET['page']) ? (int)\$_GET['page'] : 1;\n";
        $controller_code .= "        \$per_page = 10;  // Items per page\n";
        $controller_code .= "        \$offset = (\$page - 1) * \$per_page;\n";
        $controller_code .= "        \n";
        $controller_code .= "        // Get total count for pagination\n";
        $controller_code .= "        \$total_items = {$class_name}::count();\n";
        $controller_code .= "        \$total_pages = ceil(\$total_items / \$per_page);\n";
        $controller_code .= "        \n";
        $controller_code .= "        // Get items for current page\n";
        $controller_code .= "        \${$table_name} = {$class_name}::findAll('id', 'ASC', \$per_page, \$offset);\n";
    } else {
        $controller_code .= "        \${$table_name} = {$class_name}::findAll();\n";
    }
    
    // Add search if enabled
    if (isset($_SESSION['features']['search']) && $_SESSION['features']['search']) {
        $controller_code .= "        \n";
        $controller_code .= "        // Handle search\n";
        $controller_code .= "        if (isset(\$_GET['search']) && !empty(\$_GET['search'])) {\n";
        $controller_code .= "            \$search_term = trim(\$_GET['search']);\n";
        
        // Add pagination with search
        if (isset($_SESSION['features']['pagination']) && $_SESSION['features']['pagination']) {
            $controller_code .= "            \${$table_name} = {$class_name}::search(\$search_term, [], 'id', 'ASC', \$per_page, \$offset);\n";
            $controller_code .= "            \n";
            $controller_code .= "            // Adjust pagination for search results\n";
            $controller_code .= "            // This is a simplified approach; in a real app, you would count search results\n";
            $controller_code .= "            \$total_items = count({$class_name}::search(\$search_term));\n";
            $controller_code .= "            \$total_pages = ceil(\$total_items / \$per_page);\n";
        } else {
            $controller_code .= "            \${$table_name} = {$class_name}::search(\$search_term);\n";
        }
        
        $controller_code .= "        }\n";
    }
    
    // Include view
    $controller_code .= "        \n";
    $controller_code .= "        // Include view\n";
    $controller_code .= "        include 'views/{$table_name}/index.php';\n";
    $controller_code .= "    }\n\n";
    
    // Show method
    $controller_code .= "    /**\n";
    $controller_code .= "     * Display the specified resource\n";
    $controller_code .= "     * \n";
    $controller_code .= "     * @param int \$id Resource ID\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function show(\$id) {\n";
    $controller_code .= "        \${$singular} = {$class_name}::findById(\$id);\n";
    $controller_code .= "        \n";
    $controller_code .= "        if (!\${$singular}) {\n";
    $controller_code .= "            // Handle not found\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&error=not_found');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    $controller_code .= "        // Include view\n";
    $controller_code .= "        include 'views/{$table_name}/show.php';\n";
    $controller_code .= "    }\n\n";
    
    // Create method (form display)
    $controller_code .= "    /**\n";
    $controller_code .= "     * Show the form for creating a new resource\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function create() {\n";
    $controller_code .= "        // Include view\n";
    $controller_code .= "        include 'views/{$table_name}/create.php';\n";
    $controller_code .= "    }\n\n";
    
    // Store method (form processing)
    $controller_code .= "    /**\n";
    $controller_code .= "     * Store a newly created resource\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function store() {\n";
    $controller_code .= "        // Validate form data\n";
    $controller_code .= "        if (!isset(\$_POST) || empty(\$_POST)) {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&action=create&error=empty_form');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    $controller_code .= "        // Create new object\n";
    $controller_code .= "        \${$singular} = new {$class_name}();\n";
    $controller_code .= "        \n";
    
    // Set properties from form data
    $controller_code .= "        // Set properties from form data\n";
    foreach ($table['fields'] as $field) {
        $field_name = sanitize_input($field['name']);
        // Skip auto-increment primary key
        if (isset($field['constraints']) && in_array('primary', $field['constraints']) && isset($field['auto_increment']) && $field['auto_increment']) {
            continue;
        }
        $controller_code .= "        if (isset(\$_POST['{$field_name}'])) {\n";
        $controller_code .= "            \${$singular}->{$field_name} = sanitize_input(\$_POST['{$field_name}']);\n";
        $controller_code .= "        }\n";
    }
    
    $controller_code .= "        \n";
    $controller_code .= "        // Save the record\n";
    $controller_code .= "        if (\${$singular}->save()) {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&success=created');\n";
    $controller_code .= "        } else {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&action=create&error=save_failed');\n";
    $controller_code .= "        }\n";
    $controller_code .= "        exit;\n";
    $controller_code .= "    }\n\n";
    
    // Edit method (form display)
    $controller_code .= "    /**\n";
    $controller_code .= "     * Show the form for editing the specified resource\n";
    $controller_code .= "     * \n";
    $controller_code .= "     * @param int \$id Resource ID\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function edit(\$id) {\n";
    $controller_code .= "        \${$singular} = {$class_name}::findById(\$id);\n";
    $controller_code .= "        \n";
    $controller_code .= "        if (!\${$singular}) {\n";
    $controller_code .= "            // Handle not found\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&error=not_found');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    $controller_code .= "        // Include view\n";
    $controller_code .= "        include 'views/{$table_name}/edit.php';\n";
    $controller_code .= "    }\n\n";
    
    // Update method (form processing)
    $controller_code .= "    /**\n";
    $controller_code .= "     * Update the specified resource\n";
    $controller_code .= "     * \n";
    $controller_code .= "     * @param int \$id Resource ID\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function update(\$id) {\n";
    $controller_code .= "        // Validate form data\n";
    $controller_code .= "        if (!isset(\$_POST) || empty(\$_POST)) {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&action=edit&id='.\$id.'&error=empty_form');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    $controller_code .= "        // Get existing record\n";
    $controller_code .= "        \${$singular} = {$class_name}::findById(\$id);\n";
    $controller_code .= "        \n";
    $controller_code .= "        if (!\${$singular}) {\n";
    $controller_code .= "            // Handle not found\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&error=not_found');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    
    // Update properties from form data
    $controller_code .= "        // Update properties from form data\n";
    foreach ($table['fields'] as $field) {
        $field_name = sanitize_input($field['name']);
        // Skip primary key
        if (isset($field['constraints']) && in_array('primary', $field['constraints'])) {
            continue;
        }
        $controller_code .= "        if (isset(\$_POST['{$field_name}'])) {\n";
        $controller_code .= "            \${$singular}->{$field_name} = sanitize_input(\$_POST['{$field_name}']);\n";
        $controller_code .= "        }\n";
    }
    
    $controller_code .= "        \n";
    $controller_code .= "        // Save the updated record\n";
    $controller_code .= "        if (\${$singular}->save()) {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&success=updated');\n";
    $controller_code .= "        } else {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&action=edit&id='.\$id.'&error=update_failed');\n";
    $controller_code .= "        }\n";
    $controller_code .= "        exit;\n";
    $controller_code .= "    }\n\n";
    
    // Delete method
    $controller_code .= "    /**\n";
    $controller_code .= "     * Delete the specified resource\n";
    $controller_code .= "     * \n";
    $controller_code .= "     * @param int \$id Resource ID\n";
    $controller_code .= "     */\n";
    $controller_code .= "    public function delete(\$id) {\n";
    $controller_code .= "        // Get existing record\n";
    $controller_code .= "        \${$singular} = {$class_name}::findById(\$id);\n";
    $controller_code .= "        \n";
    $controller_code .= "        if (!\${$singular}) {\n";
    $controller_code .= "            // Handle not found\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&error=not_found');\n";
    $controller_code .= "            exit;\n";
    $controller_code .= "        }\n";
    $controller_code .= "        \n";
    $controller_code .= "        // Delete the record\n";
    $controller_code .= "        if (\${$singular}->delete()) {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&success=deleted');\n";
    $controller_code .= "        } else {\n";
    $controller_code .= "            header('Location: index.php?page={$table_name}&error=delete_failed');\n";
    $controller_code .= "        }\n";
    $controller_code .= "        exit;\n";
    $controller_code .= "    }\n";
    
    // Add export to CSV if enabled
    if (isset($_SESSION['features']['export_csv']) && $_SESSION['features']['export_csv']) {
        $controller_code .= "\n";
        $controller_code .= "    /**\n";
        $controller_code .= "     * Export data to CSV\n";
        $controller_code .= "     */\n";
        $controller_code .= "    public function exportCsv() {\n";
        $controller_code .= "        // Get all records\n";
        $controller_code .= "        \${$table_name} = {$class_name}::findAll();\n";
        $controller_code .= "        \n";
        $controller_code .= "        // Set headers for CSV download\n";
        $controller_code .= "        header('Content-Type: text/csv');\n";
        $controller_code .= "        header('Content-Disposition: attachment; filename={$table_name}-' . date('Y-m-d') . '.csv');
";
        $controller_code .= "        \n";
        $controller_code .= "        // Create output stream\n";
        $controller_code .= "        \$output = fopen('php://output', 'w');\n";
        $controller_code .= "        \n";
        $controller_code .= "        // Add CSV headers\n";
        $controller_code .= "        \$headers = [\n";
        
        // Add field names as CSV headers
        foreach ($table['fields'] as $field) {
            $field_name = sanitize_input($field['name']);
            $controller_code .= "            '{$field_name}',\n";
        }
        
        $controller_code .= "        ];\n";
        $controller_code .= "        fputcsv(\$output, \$headers);\n";
        $controller_code .= "        \n";
        $controller_code .= "        // Add data rows\n";
        $controller_code .= "        foreach (\${$table_name} as \$item) {\n";
        $controller_code .= "            \$row = [\n";
        
        // Add field values for CSV row
        foreach ($table['fields'] as $field) {
            $field_name = sanitize_input($field['name']);
            $controller_code .= "                \$item->{$field_name},\n";
        }
        
        $controller_code .= "            ];\n";
        $controller_code .= "            fputcsv(\$output, \$row);\n";
        $controller_code .= "        }\n";
        $controller_code .= "        \n";
        $controller_code .= "        fclose(\$output);\n";
        $controller_code .= "        exit;\n";
        $controller_code .= "    }\n";
    }
    
    // Close class
    $controller_code .= "}\n?>";
    
    return $controller_code;
}
?>